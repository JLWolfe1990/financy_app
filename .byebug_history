continue
txns.keys
txns
c
Classification.ignored.include?(txn.classification)
Classification.ignored.include?(classification)
Classification.ignored
txn.focus?
txn
c
continue
Transaction.where(rule_id: nil).first.user
Transaction.where(rule_id: nil)
Transaction.where(rule_id: nil, user_id: user.id)
Transaction.where(rule_id: nil, user_id: user.id).count
Transaction.where(rule_id: nil, user_id: user.id)
Transaction.where(rule_id: nil)
user.reload.transactions.unclassified
transactions
user.transactions.unclassified
c
user.transactions.unclassified
user.transactions
c
Transaction.includes(:account).unclassified.for_user(current_user).length
Transaction.includes(:account).unclassified.for_user(current_user)
Transaction.includes(:account).unclassified
c
txns['transactions'].first
txns['accounts'].first
txns['accounts']
txns['total_transactions']
txns.keys
txn
txn.keys
txns
c
txns['total_transactions']
txns.total_transactions
txns.keys
txns
c
obj
c
accounts_response['accounts'].first
accounts_response['accounts']
accounts_response
c
txns = PlaidWrapper.client.transactions.get(access_token, '2017-08-01', '2017-11-30')
txns['accounts'][0]
txns['accounts']
txns.first
txns = PlaidWrapper.client.transactions.get(access_token, '2017-08-01', '2017-11-30')
PlaidWrapper.client.transactions.get(access_token, '2017-08-01', '2017-11-30')
PlaidWrapper.client.accounts.get(access_token)['accounts'][2]
PlaidWrapper.client.accounts.get(access_token)['accounts'][1]
PlaidWrapper.client.accounts.get(access_token)
PlaidWrapper.client.transactions.get(access_token)
PlaidWrapper.client.accounts.get(access_token)
client.accounts.get(access_token)
c
link_params
c
link_params[:plaid_institution_id]
link_params[:plaid_token]
link_params
c
params
c
params
continue
c
continue
institutions['institutions'].first
institutions['institutions']
PlaidWrapper.client.institutions.get(count: 500, offset: 0)
PlaidWrapper.client.institutions.get(count: 500, offset: 10000)
PlaidWrapper.client.institutions.get(count: 10000, offset: 0)
institutions['institutions'].first
institutions['institutions']
institutions[:institutions]
institutions
c
exit
continue
hash
continue
ENV['PLAID_CLIENT_ID']
continue
ENV['SENDGRID_USERNAME']
ENV['PLAID_CLIENT_ID']
ENV
continue
ENV['PLAID_CLIENT_ID']
ENV
